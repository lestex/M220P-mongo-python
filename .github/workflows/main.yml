name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'master'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        if [ -f requirements/test.txt ]; then pip install -r requirements/test.txt; fi
    
    - name: Start mongoDB
      run: |
        docker-compose up -d

    - name: Find mongo container id
      run: |
        # find mongo container id
        docker cp data `docker ps -q`:/import

    - name: Restore mongo database
      run: |
        # restore test database
        docker-compose  exec -T mongodb  mongorestore --drop --gzip import/data

    - name: Run migrations
      run: python migrations/movie_last_updated_migration.py

    - name: Test with pytest
      run: |
        pytest -v

    # - name: Find Issue
    #   id: find_issue
    #   shell: bash
    #   run: |
    #     echo "::set-output name=ISSUE_ID::$(echo ${GITHUB_HEAD_REF} | egrep -o 'GA-[0-9]{1,4}')"
    #     echo brach name: $GITHUB_HEAD_REF
    #     echo extracted issue: ${GITHUB_HEAD_REF} | egrep -o 'GA-[0-9]{1,4}'


    - name: Generate test report
      run: |
        codecov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    # - name: Check Coverage
    #   run: |
    #     coverage report --fail-under=40 --omit '.venv/*' || (echo 'Insufficient coverage' && $(exit 1))
